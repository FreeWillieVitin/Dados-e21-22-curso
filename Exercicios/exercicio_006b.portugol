# Exercicio 006 b Ver 001

    Crie um algortimo que imprima numeros aleatorios entre 1 e 100

programa {

    inclua biblioteca Util
    inteiro num1    

    funcao inicio() {
        
        escreva("Gerar numeros aleatorios em 1 e 10 agora\n")
        num1 = Util.sorteia(1,10)
        escreva("Numero gerado: " + num1, "\n" )
        
  }
}


# Exercicio 006 b Ver 002

    Crie um algortimo que conte de 1 a 10 

programa {

  inclua biblioteca Util
  inteiro contador = 0

  funcao inicio() {
    
    	enquanto (contador < 11)
		{
			limpa()
			escreva ("Contando: ", contador)
		  	
		  	contador = contador + 1
		  	Util.aguarde(500) 
        }
  }
}



# Exercicio 006 b ver 003 

    Crie um algoritmo que armazene 10 numeros resultantes da função randomica em 10 variavies diferentes

    programa {

    inclua biblioteca Util
    inteiro num1, num2, num3, num4, num5, num6, num7, num8, num9, num10    

    funcao inicio() {
        
        escreva("Gerar numeros aleatorios em 1 e 10 agora\n")
        num1 = Util.sorteia(1,10)
        num2 = Util.sorteia(1,10)
        num3 = Util.sorteia(1,10)
        num4 = Util.sorteia(1,10)
        num5 = Util.sorteia(1,10)
        num6 = Util.sorteia(1,10)
        num7 = Util.sorteia(1,10)
        num8 = Util.sorteia(1,10)
        num9 = Util.sorteia(1,10)
        num10 = Util.sorteia(1,10)
        escreva("Numero gerado: " + num1, " ", num2, " ", num3, " ", num4, " ", num5, " ", num6, " ", num7, " ", num8, " ", num9, " ", num10 )
        
  }
}

# Exercicio 005 b ver 004

    Crie um algoritmo que armazene e imprima 10 numeros resultantes de uma funcao randomica utilizando um Vetor

   programa{
  inclua biblioteca Util

  funcao inicio(){
    inteiro i, vet[10]

    para(i = 0; i < 10; i++)
      vet[i] = Util.sorteia(0, 10)

    para(i = 0; i < 10; i++)
      escreva(vet[i], " ")
    escreva("\n")
  }
} 

